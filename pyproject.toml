[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agentical"
version = "0.1.0"
description = "A simple, flexible framework for building tool-enabled AI agents"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = ["ai", "tools", "openai", "framework", "agent", "agentic"]
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
llm = [
    "openai>=1.0.0",
    "anthropic>=0.18.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
examples = [
    "aiohttp>=3.8.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
]

[tool.hatch.build.targets.wheel]
packages = ["agentical"]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "B", "I", "N", "UP", "ANN", "S", "A", "C4", "T20", "RET", "SIM"]
ignore = ["ANN101", "ANN102", "ANN401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=agentical --cov-report=term-missing"
markers = [
    "integration: marks tests that require external services",
] 